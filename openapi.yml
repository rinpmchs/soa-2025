openapi: "3.0.3"
info:
  title: "User Authentication API"
  description: "API for user registration, authentication, and profile management."
  version: "1.0.0"

servers:
  - url: "http://127.0.0.1:8000"
    description: "Local development server"

paths:
  /users/register:
    post:
      summary: "Register a new user"
      operationId: "registerUser"
      tags:
        - "Users"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
      responses:
        "201":
          description: "User created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "User already exists"

  /users/login:
    post:
      summary: "User Login"
      operationId: "userLogin"
      tags:
        - "Users"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: "JWT Token returned"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          description: "Invalid credentials"

  /users/me:
    get:
      summary: "Get Current User Profile"
      operationId: "getCurrentUser"
      tags:
        - "Users"
      security:
        - BearerAuth: []
      responses:
        "200":
          description: "User profile retrieved"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "401":
          description: "Unauthorized"

  /users/update:
    put:
      summary: "Update User Profile"
      operationId: "updateUserProfile"
      tags:
        - "Users"
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserUpdate"
      responses:
        "200":
          description: "User profile updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: "Email already in use"
        "401":
          description: "Unauthorized"

components:
  schemas:
    UserCreate:
      type: "object"
      required:
        - login
        - email
        - password
      properties:
        login:
          type: "string"
        email:
          type: "string"
          format: "email"
        password:
          type: "string"
          format: "password"

    UserResponse:
      type: "object"
      properties:
        id:
          type: "integer"
        login:
          type: "string"
        email:
          type: "string"
          format: "email"
        first_name:
          type: "string"
          nullable: true
        last_name:
          type: "string"
          nullable: true
        date_of_birth:
          type: "string"
          nullable: true
        phone_number:
          type: "string"
          nullable: true

    LoginRequest:
      type: "object"
      required:
        - login
        - password
      properties:
        login:
          type: "string"
        password:
          type: "string"
          format: "password"

    TokenResponse:
      type: "object"
      properties:
        access_token:
          type: "string"
        token_type:
          type: "string"

    UserUpdate:
      type: "object"
      properties:
        first_name:
          type: "string"
        last_name:
          type: "string"
        date_of_birth:
          type: "string"
          format: "date"
        phone_number:
          type: "string"
        email:
          type: "string"
          format: "email"

  securitySchemes:
    BearerAuth:
      type: "http"
      scheme: "bearer"
      bearerFormat: "JWT"
